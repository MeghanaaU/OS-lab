#include <stdio.h>

#define MAX 5

int main() {
    int total_philosophers, hungry_count, choice;
    int hungry[MAX], i, j;

    printf("Enter the total number of philosophers: ");
    scanf("%d", &total_philosophers);

    printf("How many are hungry: ");
    scanf("%d", &hungry_count);

    for (i = 0; i < hungry_count; i++) {
        printf("Enter philosopher %d position (1 to %d): ", i + 1, total_philosophers);
        scanf("%d", &hungry[i]);
    }

    while (1) {
        printf("\n1. One can eat at a time\n");
        printf("2. Two can eat at a time\n");
        printf("3. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        if (choice == 3) {
            break;
        }

        switch (choice) {
            case 1:
                printf("Allow one philosopher to eat at any time\n");
                for (i = 0; i < hungry_count; i++) {
                    for (j = 0; j < hungry_count; j++) {
                        printf("P %d is waiting\n", hungry[j]);
                    }
                    printf("P %d is granted to eat\n", hungry[i]);
                    printf("P %d has finished eating\n", hungry[i]);
                }
                break;

            case 2:
                printf("Allow two philosophers to eat at a time\n");
                for (i = 0; i < hungry_count; i += 2) {
                    for (j = 0; j < hungry_count; j++) {
                        printf("P %d is waiting\n", hungry[j]);
                    }

                    printf("P %d is granted to eat\n", hungry[i]);
                    if (i + 1 < hungry_count) {
                        printf("P %d is granted to eat\n", hungry[i + 1]);
                    }

                    printf("P %d has finished eating\n", hungry[i]);
                    if (i + 1 < hungry_count) {
                        printf("P %d has finished eating\n", hungry[i + 1]);
                    }
                }
                break;

            default:
                printf("Invalid choice\n");
        }
    }

    return 0;
}
